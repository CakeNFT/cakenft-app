"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CakeOwnerVault__factory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class CakeOwnerVault__factory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_cake, _cakeStaker, overrides) {
        return super.deploy(_cake, _cakeStaker, overrides || {});
    }
    getDeployTransaction(_cake, _cakeStaker, overrides) {
        return super.getDeployTransaction(_cake, _cakeStaker, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CakeOwnerVault__factory = CakeOwnerVault__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_cake",
                type: "address",
            },
            {
                internalType: "contract ICakeStaker",
                name: "_cakeStaker",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "cake",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cakeStaker",
        outputs: [
            {
                internalType: "contract ICakeStaker",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "claim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c060405234801561001057600080fd5b5060405161095238038061095283398101604081905261002f916100a6565b61003833610056565b6001600160601b0319606092831b8116608052911b1660a0526100f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b957600080fd5b82516100c4816100e0565b60208401519092506100d5816100e0565b809150509250929050565b6001600160a01b03811681146100f557600080fd5b50565b60805160601c60a05160601c6107f861015a60003960008181608701528181610154015281816101ef015281816104d6015261059801526000818161010001528181610255015281816102a90152818161043a015261050501526107f86000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d7578063b6b55f25146100e8578063dce17484146100fb578063f2fde38b1461012257600080fd5b80631d1dc697146100825780634e71d92d146100c5578063715018a6146100cf575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100cd610135565b005b6100cd6103ad565b6000546001600160a01b03166100a9565b6100cd6100f636600461076c565b610418565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100cd61013036600461071a565b6105ff565b6040516393f1a40b60e01b8152600060048201819052306024830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906393f1a40b90604401604080518083038186803b15801561019d57600080fd5b505afa1580156101b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d5919061079e565b50604051631058d28160e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631058d28190602401600060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6102946000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156102f357600080fd5b505afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190610785565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a9919061074a565b5050565b6000546001600160a01b0316331461040c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61041660006106ca565b565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561048657600080fd5b505af115801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be919061074a565b5060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610581919061074a565b506040516341441d3b60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906341441d3b90602401600060405180830381600087803b1580156105e457600080fd5b505af11580156105f8573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146106595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610403565b6001600160a01b0381166106be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610403565b6106c7816106ca565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561072c57600080fd5b81356001600160a01b038116811461074357600080fd5b9392505050565b60006020828403121561075c57600080fd5b8151801515811461074357600080fd5b60006020828403121561077e57600080fd5b5035919050565b60006020828403121561079757600080fd5b5051919050565b600080604083850312156107b157600080fd5b50508051602090910151909290915056fea264697066735822122020d385ea09306e07ec116233d4dae3fc2d812e2ea0f6b50b1183e45ea5f55b5f64736f6c63430008050033";
//# sourceMappingURL=CakeOwnerVault__factory.js.map